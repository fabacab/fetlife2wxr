<?php
/**
 * This program creates a WordPress Extended RSS (WXR) file for a given FetLife
 * user. The resulting file can be used to import a FetLife user's content to
 * any WordPress blog, notably those on WordPres.com.
 *
 * PHP version 5
 *
 * LICENCE: This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author    maymay <bitetheappleback@gmail.com>
 * @copyright 2013 maymay
 * @license   http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License version 3.0
 * @link      http://fetlife.maybemaimed.com/escape/
 */

// Load up required libraries.
require_once dirname(__FILE__) . '/lib/FetLife/FetLife.php';

// Class for creating the WXR file from the Writings.
class FetLifeWXR extends FetLife {
    var $usr; // The FetLifeUser object.
    var $wxr; // Our XMLWriter resource.

    /**
     * Constructor does all the work. Just pass an instantiated FetLifeUser
     * object and an array containing all the required info.
     */
    function FetLifeWXR ($fl_usr, $info) {
        $this->usr = $fl_usr;
        foreach ($info as $k => $v) {
            $this->$k = $v;
        }
        $this->wxr = new XMLWriter();
        $this->wxr->openMemory();
        $this->wxr->setIndentString("\t");
        $this->wxr->setIndent(true);

        // Do the actual file writing.
        $this->header();
        $this->addAuthor(array(
            'wp:author_id' => $this->usr->id,
            'wp:author_login' => $this->usr->nickname,
            'wp:author_email' => ($this->usr->email_address) ? $this->usr->email_address : '',
            'wp:author_display_name' => '',
            'wp:author_first_name' => '',
            'wp:author_last_name' => ''
        ));
        foreach ($this->categories as $cat) {
            $this->addCategory($cat); // Should already be an array.
        }
        foreach ($this->posts as $post) {
            $this->addItem($post);
        }
        $this->footer();
    }

    // Mimic WordPress's WXR header.
    function header () {
        $wp_date = date('Y-m-d H:i');
        $usage = <<<END_USAGE
<!-- This is a WordPress eXtended RSS file generated by fetlife2wxr as an export of your Writings. -->
<!-- It contains information about your FetLife Writings, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from FetLife to a WordPress blog. -->
<!-- This file is not intended to serve as a complete backup of your FetLife account. -->
<!-- If you need to make a more thorough backup of your FetLife account, try the FetLife Exporter: -->

<!--                         http://fetlife.maybemaimed.com/                          -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="fetlife2wxr" created="$wp_date" -->

END_USAGE;
        $this->wxr->startDocument('1.0', 'UTF-8');
        $this->wxr->writeRaw($usage);
        $this->wxr->startElement('rss');
        $this->wxr->writeAttribute('version', '2.0');
        $this->wxr->writeAttribute('xmlns:excerpt', 'http://wordpress.org/export/1.2/excerpt/');
        $this->wxr->writeAttribute('xmlns:content', 'http://purl.org/rss/1.0/modules/content/');
        $this->wxr->writeAttribute('xmlns:wfw', 'http://wellformedweb.org/CommentAPI/');
        $this->wxr->writeAttribute('xmlns:dc', 'http://purl.org/dc/elements/1.1/');
        $this->wxr->writeAttribute('xmlns:wp', 'http://wordpress.org/export/1.2/');

        // -----------------------
        $this->wxr->startElement('channel');
        $this->wxr->writeElement('generator', "http://{$_SERVER['HTTP_HOST']}{$_SERVER['PHP_SELF']}");
        $this->wxr->writeElement('title', "{$this->usr->nickname}'s Writings - FetLife");
        $this->wxr->writeElement('link', "https://fetlife.com/users/{$this->usr->id}/posts");
        //$this->wxr->writeElement('description');
        $this->wxr->writeElement('pubDate', date("D, d M Y H:i:s e"));
        $this->wxr->writeElement('wp:wxr_version', '1.2');
        $this->wxr->writeElement('wp:base_site_url', "https://fetlife.com/users/{$this->usr->id}/posts");
        $this->wxr->writeElement('wp:base_blog_url', "https://fetlife.com/users/{$this->usr->id}/posts");
    }

    function footer () {
        $this->wxr->endElement(); // </channel>
        $this->wxr->endElement(); // </rss>
    }

    /**
     * Adds a <wp:author> element to the WXR.
     *
     * @param array $info Keys are element names, values are element contents.
     * @return void
     */
    function addAuthor ($info) {
        $this->wxr->startElement('wp:author');
        foreach ($info as $k => $v) {
            $this->wxr->writeElement($k, $v);
        }
        $this->wxr->endElement();
    }

    function addCategory ($info) {
        $this->wxr->startElement('wp:category');
        foreach ($info as $k => $v) {
            $this->wxr->writeElement($k, $v);
        }
        $this->wxr->endElement();
    }

    function addItem ($info) {
        $this->wxr->startElement('item');
        foreach ($info as $k => $v) {
            switch ($k) {
                case 'guid':
                case 'category':
                    $this->wxr->startElement($k);
                    foreach ($v['attrs'] as $attr => $value) {
                        $this->wxr->writeAttribute($attr, $value);
                    }
                    $this->wxr->text($v['contents']);
                    $this->wxr->endElement();
                    break;
                case 'content:encoded':
                    $this->wxr->startElement($k);
                    $this->wxr->writeCData($v);
                    $this->wxr->endElement();
                    break;
                default:
                    $this->wxr->writeElement($k, $v);
                    break;
            }
        }
        $this->wxr->endElement();
    }

    function saveWXR () {
        return $this->wxr->outputMemory();
    }
}

// Let's get started.
if (empty($_POST['fl_nickname']) || empty($_POST['fl_password'])) {
    die('Please use the <a href="' . dirname($_SERVER['PHP_SELF']) . '">FetLife to WXR generator page</a>.');
}
$FL = new FetLifeUser($_POST['fl_nickname'], $_POST['fl_password']);
if ($_POST['fl_proxyurl']) {
    $p = parse_url($_POST['fl_proxyurl']);
    $FL->connection->setProxy(
        "{$p['host']}:{$p['port']}",
        ('socks' === $p['scheme']) ? CURLPROXY_SOCKS5 : CURLPROXY_HTTP
    );
}
$FL->logIn() or die("Could not log in to FetLife. Last HTML received was:<br />{$FL->connection->cur_page}");

// And deal with timezone headaches. :P
date_default_timezone_set('UTC');

// Fetch all Writings.
$fl_writings = $FL->getWritingsOf($FL->id);

$cats = array();
$posts = array();
foreach ($fl_writings as $writing) {
    // Extract all the categories we found
    if ($writing->category && (false === in_array($writing->category, $cats)) ) {
        $description = '';
        switch ($writing->category) {
            case 'Journal Entry':
                $term_id = 1;
                $description = 'about my life and journey';
                break;
            case 'Erotica':
                $term_id = 2;
                $description = 'that I have written';
                break;
            case 'Note':
                $term_id = 3;
                $description = 'about random stuff';
                break;
        }

        $cats[$writing->category] = array(
            'wp:cat_name' => $writing->category,
            'wp:category_nicename' => strtolower(str_replace(' ', '-', $writing->category)),
            'wp:category_description' => $description,
            'wp:term_id' => $term_id,
            'wp:category_parent' => ''
        );
    }

    // and extract the posts, too.
    $posts[] = array(
        'title' => $writing->title,
        'link' => $writing->getPermalink(),
        'pubDate' => date("D, d M Y H:i:s e", strtotime($writing->dt_published)),
        'dc:creator' => $FL->nickname, // NOTE: This is the user doing the export.
        'guid' => array(
            'attrs' => array('isPermaLink' => 'true'),
            'contents' => $writing->getPermalink()
        ),
        'content:encoded' => $writing->getContentHtml(),
        'wp:post_id' => $writing->id,
        'wp:post_date' => date('Y-m-d H:i:s', strtotime($writing->dt_published)),
        'wp:post_name' => strtolower(str_replace(' ', '-', $writing->title)),
        'wp:status' => 'publish',
        'wp:post_type' => 'post',
        'category' => array(
            'attrs' => array(
                'domain' => 'category',
                'nicename' => strtolower(str_replace(' ', '-', $writing->category))
            ),
            'contents' => $writing->category
        )
    );
}

// Let's! Do! Some! Magic!
$fl_wxr = new FetLifeWXR($FL, array(
    'categories' => $cats,
    'posts' => $posts
));

// Give it to the user.
$output = $fl_wxr->saveWXR();
header('Content-Type: application/rss+xml');
header('Content-Length: ' . mb_strlen($output));
$filename = "{$FL->nickname}.fetlife." . date('Y-m-d') . '.xml';
header("Content-Disposition: attachment; filename=\"$filename\"");
print $output;
